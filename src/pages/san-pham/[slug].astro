---
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Image } from "astro:assets";
import { Card, CardContent } from "@/components/ui/card";
import { Check, RotateCcw, Shield, Star, Truck } from "lucide-react";
import ImageGallery from "@/components/product/ImageGallery";
import Layout from "@/layouts/Layout.astro";
import { getCollection } from "astro:content";
import { formatCurrency } from "@/lib/formatCurrency";
export const getStaticPaths = async () => {
  const products = await getCollection("products");
    return products.map((product) => ({
        params: {slug: product.data.slug},
        props: {product: product}
    }));
};
const {props} = Astro;
const product = props?.product || {};
---
<Layout title={product.data.title} description={product.data.description} ogImage={product.data.images[0]}>
    <div class="container mx-auto px-4 py-8">
        {/* Breadcrumb */}
        <nav class="flex items-center space-x-2 text-sm text-gray-600 mb-6">
          <a href="/" class="hover:text-primary">
            Trang chủ
          </a>
          <span>/</span>
          <a href="/products" class="hover:text-primary">
            Sản phẩm
          </a>
          <span>/</span>
          <a href={`/products/category/${product.data.category.toLowerCase()}`} class="hover:text-primary">
            {product.data.category}
          </a>
          <span>/</span>
          <span class="text-gray-900">{product.data.title}</span>
        </nav>
    
        <div class="grid lg:grid-cols-2 gap-12 mb-12">
          {/* Product Images */}
              <ImageGallery product={product.data} client:load />
    
          {/* Product Info */}
          <div class="space-y-6">
            {/* Header */}
            <div>
              <div class="flex items-center space-x-2 mb-2">
                <Badge variant="outline">{product.data.brand}</Badge>
                <Badge variant="outline">{product.data.category}</Badge>
              </div>
              <h1 class="text-3xl font-bold text-gray-900 mb-2">{product.data.title}</h1>
            </div>

            {/* Price */}
            <div class="space-y-2">
              <div class="flex items-center space-x-4">
                {product.data.priceSale && (
                  <span class="text-4xl font-bold text-primary mr-3">{formatCurrency(product.data.priceSale)}</span>
                )}
                {product.data.price && (
                  <span
                    class={`${
                      product.data.priceSale
                        ? "text-gray-500 line-through"
                        : "text-4xl font-bold text-gray-800"
                    }`}
                  >
                    {formatCurrency(product.data.price)}
                  </span>
                )}
                {product.data.discount && product.data.priceSale && product.data.price && (
                  <span class="ml-3 bg-red-500 text-white text-sm font-semibold px-3 py-1 rounded-full">
                    Giảm {(((product.data.price - product.data.priceSale) / product.data.price) * 100).toFixed(0)}%
                  </span>
                )}
              </div>
            </div>

            {/* Key Features */}
            <!-- <div>
              <h3 class="font-semibold text-gray-900 mb-3">Key Features:</h3>
              <ul class="space-y-2">
                {product.keyFeatures.slice(0, 4).map((feature) => (
                  <li class="flex items-start">
                    <Check className="h-4 w-4 text-primary mr-2 mt-0.5 flex-shrink-0" />
                    <span class="text-sm text-gray-700">{feature}</span>
                  </li>
                ))}
              </ul>
            </div> -->
    
            {/* Quantity and Add to Cart */}
            <div class="space-y-4">
    
              <div class="flex space-x-4">
                <Button
                  className="flex-1 bg-primary hover:bg-primary-700 h-12"
                >
                    Liên hệ
                </Button>
              </div>
            </div>
    
            {/* Shipping & Returns */}
            <!-- <div class="space-y-3 pt-4 border-t">
              {product.data.shipping && (
                <div class="flex items-center space-x-3">
                  <Truck className="h-5 w-5 text-primary" />
                  <div>
                    <p class="font-medium text-gray-900">Vận chuyển</p>
                    <p class="text-sm text-gray-600">{product.data.shipping}</p>
                  </div>
                </div>
              )}
              {product.data.warranty && (
                <div class="flex items-center space-x-3">
                  <Shield className="h-5 w-5 text-primary" />
                  <div>
                    <p class="font-medium text-gray-900">Bảo hành</p>
                    <p class="text-sm text-gray-600">{product.data.warranty}</p>
                  </div>
                </div>
              )}
              {product.data.returnPolicy && (
                <div class="flex items-center space-x-3">
                  <RotateCcw className="h-5 w-5 text-primary" />
                  <div>
                    <p class="font-medium text-gray-900">Chính sách đổi trả</p>
                    <p class="text-sm text-gray-600">{product.data.returnPolicy}</p>
                  </div>
                </div>
              )}
            </div> -->
          </div>
        </div>
    
    <Card>
      <CardContent className="p-6">
        <h3 class="text-xl font-semibold mb-4">Mô tả sản phẩm</h3>
        <p class="text-gray-700 mb-6">{product.data.description}</p>
        
      </CardContent>
    </Card>
    
        {/* Related Products */}
        <!-- <div>
          <h2 class="text-2xl font-bold text-gray-900 mb-6">Related Products</h2>
          <div class="grid md:grid-cols-3 gap-6">
            {relatedProducts.map((relatedProduct) => (
              <Card key={relatedProduct.id} className="hover:shadow-lg transition-shadow">
                <CardContent className="p-6">
                  <Image
                    src={relatedProduct.image || "/placeholder.svg"}
                    alt={relatedProduct.name}
                    width={200}
                    height={200}
                    class="w-full h-48 object-contain mb-4"
                  />
                  <h3 class="font-semibold text-lg mb-2 line-clamp-2">{relatedProduct.name}</h3>
                  <div class="flex items-center mb-2">
                    {[...Array(5)].map((_, i) => (
                      <Star
                        key={i}
                        class={`h-4 w-4 ${
                          i < Math.floor(relatedProduct.rating) ? "text-yellow-400 fill-current" : "text-gray-300"
                        }`}
                      />
                    ))}
                    <span class="ml-2 text-sm text-gray-600">({relatedProduct.rating})</span>
                  </div>
                  <div class="flex items-center space-x-2 mb-4">
                    <span class="text-xl font-bold text-primary">${relatedProduct.price}</span>
                    {relatedProduct.originalPrice > relatedProduct.price && (
                      <span class="text-sm text-gray-500 line-through">${relatedProduct.originalPrice}</span>
                    )}
                  </div>
                  <Button className="w-full bg-primary hover:bg-primary-700">
                    <a href={`/products/${relatedProduct.id}`}>View Product</a>
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>
        </div> -->
      </div>
    
</Layout>